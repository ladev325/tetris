#pragma once

#define TETRIS_COLORS 8
#define FIGURES_SPAWN_SPACE 2

const unsigned char score_divider[4] = {
 1, 3, 5, 7
};

const signed char tetris_figures[7][4][3][2] = {
 {
  {{-1, 0}, {1, 0}, {2, 0}},
  {{0, 1}, {0, 2}, {0, 3}},
  {{-1, 0}, {1, 0}, {2, 0}},
  {{0, 1}, {0, 2}, {0, 3}}
 },
 {
  {{0, 1}, {1, 0}, {1, 1}},
  {{0, 1}, {1, 0}, {1, 1}},
  {{0, 1}, {1, 0}, {1, 1}},
  {{0, 1}, {1, 0}, {1, 1}}
 },
 {
  {{-1, 0}, {-1, 1}, {1, 0}},
  {{0, 1}, {0, 2}, {1, 2}},
  {{-2, 1}, {-1, 1}, {0, 1}},
  {{-1, 0}, {0, 1}, {0, 2}}
 },
 {
  {{-1, 0}, {1, 0}, {1, 1}},
  {{0, 1}, {0, 2}, {1, 0}},
  {{0, 1}, {1, 1}, {2, 1}},
  {{0, 1}, {0, 2}, {-1, 2}}
 },
 {
  {{-1, 0}, {0, 1}, {1, 1}},
  {{0, 1}, {-1, 1}, {-1, 2}},
  {{-1, 0}, {0, 1}, {1, 1}},
  {{0, 1}, {-1, 1}, {-1, 2}}
 },
 {
  {{-1, 1}, {0, 1}, {1, 0}},
  {{0, 1}, {1, 1}, {1, 2}},
  {{-1, 1}, {0, 1}, {1, 0}},
  {{0, 1}, {1, 1}, {1, 2}}
 },
 {
  {{-1, 0}, {0, 1}, {1, 0}},
  {{0, 1}, {0, 2}, {1, 1}},
  {{-1, 1}, {0, 1}, {1, 1}},
  {{-1, 1}, {0, 1}, {0, 2}}
 }
};

long map(long x, long in_min, long in_max, long out_min, long out_max);
void tetrisSetGrid(int width, int height, bool use_shadows);
void tetrisShow();
void tetrisDrawPixel(int x, int y, int state);
int tetrisGetPixel(int x, int y);